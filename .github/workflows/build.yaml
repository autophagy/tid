name: Build
on: push

jobs:
  elm-review:
    name: Elm Review
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v14.1
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: 'Elm Review'
        run: nix-shell --run "elm-review"

  elm-format:
    name: Elm Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v14.1
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: 'Elm Format'
        run: nix-shell --run "elm-format --validate src tests"

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v14.1
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: 'Elm Test'
        run: nix-shell --run "elm-test"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [ elm-review, elm-format, test ]
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v14.1
      - uses: cachix/cachix-action@v10
        with:
          name: autophagy
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Nix Build
        run: nix-build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: result
          path: result*/**/*
          retention-days: 1

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ build ]
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v2
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: result

      - name: Deploy to Github Pages
        uses: JamesIves/github-pages-deploy-action@4.1.6
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          branch: gh-pages
          folder: result
          clean: true
          clean-exclude: |
            CNAME
